version: '3.8'

services:
  # Coordinator - Central manager for the system
  coordinator:
    build:
      context: .
      dockerfile: docker/coordinator/Dockerfile
    ports:
      - "3100:3100"  # API port
    environment:
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_BASE_URL=${DEEPSEEK_BASE_URL:-https://api.deepseek.com/v1}
      - DEEPSEEK_MODEL=${DEEPSEEK_MODEL:-deepseek-chat}
      - API_HOST=0.0.0.0
      - API_PORT=3100
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - MONGODB_URI=mongodb://mongodb:27017/
      - MONGODB_DB=knowledge_platform
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - VECTOR_DB_HOST=weaviate
      - VECTOR_DB_PORT=8080
      - LOG_LEVEL=INFO
    depends_on:
      - rabbitmq
      - neo4j
      - mongodb
      - redis
      - weaviate
    volumes:
      - ./coordinator:/app/coordinator
      - ./agents:/app/agents
    networks:
      - knowledge_network

  # Message Broker - Communication between components  
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # AMQP port
      - "15672:15672"  # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - knowledge_network

  # Graph Database - Knowledge graph storage
  neo4j:
    image: neo4j:4.4
    ports:
      - "7474:7474"  # HTTP port
      - "7687:7687"  # Bolt port
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - knowledge_network

  # Document Database - Content storage
  mongodb:
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - knowledge_network

  # In-memory Cache - Fast access to frequently used data
  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - knowledge_network

  # Vector Database - Embedding storage and similarity search
  weaviate:
    image: semitechnologies/weaviate:1.18.0
    ports:
      - "8080:8080"
    environment:
      - QUERY_DEFAULTS_LIMIT=20
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=text2vec-transformers
      - ENABLE_MODULES=text2vec-transformers
      - TRANSFORMERS_INFERENCE_API=http://t2v-transformers:8080
    volumes:
      - weaviate_data:/var/lib/weaviate
    depends_on:
      - t2v-transformers
    networks:
      - knowledge_network

  # Text to vector transformer service
  t2v-transformers:
    image: semitechnologies/transformers-inference:sentence-transformers-multi-qa-mpnet-base-dot-v1
    networks:
      - knowledge_network

  # Scraper Agent - Content extraction
  scraper_agent:
    build:
      context: .
      dockerfile: docker/agents/scraper/Dockerfile
    environment:
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_BASE_URL=${DEEPSEEK_BASE_URL:-https://api.deepseek.com/v1}
      - DEEPSEEK_MODEL=${DEEPSEEK_MODEL:-deepseek-chat}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - MONGODB_URI=mongodb://mongodb:27017/
      - MONGODB_DB=knowledge_platform
      - AGENT_ID=scraper-1
      - LOG_LEVEL=INFO
    depends_on:
      - coordinator
      - rabbitmq
      - mongodb
    volumes:
      - ./agents:/app/agents
      - ./coordinator:/app/coordinator
      - ./data:/app/data
    networks:
      - knowledge_network

  # Processor Agent - Content analysis
  processor_agent:
    build:
      context: .
      dockerfile: docker/agents/processor/Dockerfile
    environment:
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_BASE_URL=${DEEPSEEK_BASE_URL:-https://api.deepseek.com/v1}
      - DEEPSEEK_MODEL=${DEEPSEEK_MODEL:-deepseek-chat}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - MONGODB_URI=mongodb://mongodb:27017/
      - MONGODB_DB=knowledge_platform
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - VECTOR_DB_HOST=weaviate
      - VECTOR_DB_PORT=8080
      - AGENT_ID=processor-1
      - LOG_LEVEL=INFO
    depends_on:
      - coordinator
      - rabbitmq
      - mongodb
      - neo4j
      - weaviate
    volumes:
      - ./agents:/app/agents
      - ./coordinator:/app/coordinator
    networks:
      - knowledge_network

  # Knowledge Agent - Knowledge graph management
  knowledge_agent:
    build:
      context: .
      dockerfile: docker/agents/knowledge/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - MONGODB_URI=mongodb://mongodb:27017/
      - MONGODB_DB=knowledge_platform
      - VECTOR_DB_HOST=weaviate
      - VECTOR_DB_PORT=8080
      - AGENT_ID=knowledge-1
      - LOG_LEVEL=INFO
    depends_on:
      - coordinator
      - rabbitmq
      - neo4j
      - mongodb
      - weaviate
    volumes:
      - ./agents:/app/agents
      - ./coordinator:/app/coordinator
    networks:
      - knowledge_network

  # Learning Agent - Learning and enhancement
  learning_agent:
    build:
      context: .
      dockerfile: docker/agents/learning/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - MONGODB_URI=mongodb://mongodb:27017/
      - MONGODB_DB=knowledge_platform
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - VECTOR_DB_HOST=weaviate
      - VECTOR_DB_PORT=8080
      - AGENT_ID=learning-1
      - LOG_LEVEL=INFO
    depends_on:
      - coordinator
      - rabbitmq
      - mongodb
      - neo4j
      - weaviate
    volumes:
      - ./agents:/app/agents
      - ./coordinator:/app/coordinator
    networks:
      - knowledge_network

  # UI Agent - API and WebSocket server
  ui_agent:
    build:
      context: .
      dockerfile: docker/agents/ui/Dockerfile
    ports:
      - "3100:3100"  # API and WebSocket port
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - MONGODB_URI=mongodb://mongodb:27017/
      - MONGODB_DB=knowledge_platform
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - VECTOR_DB_HOST=weaviate
      - VECTOR_DB_PORT=8080
      - AGENT_ID=ui-1
      - LOG_LEVEL=INFO
      - PORT=3100
      - HOST=0.0.0.0
    depends_on:
      - coordinator
      - rabbitmq
      - neo4j
      - mongodb
      - redis
      - weaviate
    volumes:
      - ./agents:/app/agents
      - ./coordinator:/app/coordinator
    networks:
      - knowledge_network

  # Frontend - Web UI
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3100
      - NEXT_PUBLIC_WEBSOCKET_URL=ws://localhost:3100/ws
    depends_on:
      - ui_agent
    networks:
      - knowledge_network

volumes:
  neo4j_data:
  neo4j_logs:
  mongodb_data:
  rabbitmq_data:
  redis_data:
  weaviate_data:

networks:
  knowledge_network:
    driver: bridge 